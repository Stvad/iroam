{"id":"pyodide.ts","dependencies":[{"name":"/home/adam/pyroam/tsconfig.json","includedInParent":true,"mtime":1614879838003},{"name":"/home/adam/pyroam/package.json","includedInParent":true,"mtime":1614857675175},{"name":"./helpers","loc":{"line":41,"column":24},"parent":"/home/adam/pyroam/src/pyodide.ts","resolved":"/home/adam/pyroam/src/helpers.ts"}],"generated":{"js":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.runPython = exports.loadPyodide = void 0; //@ts-nocheck\n\nvar helpers_1 = require(\"./helpers\");\n\nvar loadPyodide = function loadPyodide() {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var setup_code;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          helpers_1.addScriptToPage(\"pyodide\", \"https://cdn.jsdelivr.net/pyodide/v0.16.1/full/pyodide.js\");\n          return [4\n          /*yield*/\n          , helpers_1.sleep(2000)];\n\n        case 1:\n          _a.sent();\n\n          return [4\n          /*yield*/\n          , languagePluginLoader];\n\n        case 2:\n          _a.sent();\n\n          console.log(\"pyodide successfully loaded.\");\n          setup_code = \"\\nimport sys, io, traceback\\nnamespace = {}  # use separate namespace to hide run_code, modules, etc.\\ndef run_code(code):\\n  \\\"\\\"\\\"run specified code and return stdout and stderr\\\"\\\"\\\"\\n  out = io.StringIO()\\n  oldout = sys.stdout\\n  olderr = sys.stderr\\n  sys.stdout = sys.stderr = out\\n  try:\\n      # change next line to exec(code, {}) if you want to clear vars each time\\n      exec(code, namespace)\\n  except:\\n      traceback.print_exc()\\n\\n  sys.stdout = oldout\\n  sys.stderr = olderr\\n  return out.getvalue()\\n\";\n          pyodide.runPython(setup_code);\n          return [4\n          /*yield*/\n          , pyodide.loadPackage([\"numpy\", \"matplotlib\", \"scipy\"])];\n\n        case 3:\n          _a.sent();\n\n          console.log(\"Loaded packages: \");\n          console.log(pyodide.loadedPackages);\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n};\n\nexports.loadPyodide = loadPyodide;\n\nvar runPython = function runPython(code) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var out;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!code) return [2\n          /*return*/\n          ];\n          pyodide.globals.code_to_run = code;\n          return [4\n          /*yield*/\n          , pyodide.runPythonAsync(\"run_code(code_to_run)\")];\n\n        case 1:\n          out = _a.sent();\n          return [2\n          /*return*/\n          , out];\n      }\n    });\n  });\n};\n\nexports.runPython = runPython;"},"sourceMaps":{"js":{"mappings":[{"source":"pyodide.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":149,"column":50}},{"source":"pyodide.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":151,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":151,"column":4}},{"source":"pyodide.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":151,"column":13}},{"source":"pyodide.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":151,"column":16}},{"source":"pyodide.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":151,"column":23}},{"source":"pyodide.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":151,"column":24}},{"source":"pyodide.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":151,"column":35}},{"source":"pyodide.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":151,"column":36}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":153,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":153,"column":4}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":24},"generated":{"line":153,"column":15}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":27},"generated":{"line":153,"column":18}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":153,"column":27}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":27},"generated":{"line":153,"column":38}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":27},"generated":{"line":153,"column":41}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":27},"generated":{"line":154,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":27},"generated":{"line":154,"column":9}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":27},"generated":{"line":154,"column":18}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":27},"generated":{"line":154,"column":19}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":27},"generated":{"line":154,"column":24}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":27},"generated":{"line":154,"column":25}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":27},"generated":{"line":154,"column":27}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":27},"generated":{"line":154,"column":32}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":27},"generated":{"line":154,"column":33}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":27},"generated":{"line":154,"column":35}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":27},"generated":{"line":154,"column":40}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":27},"generated":{"line":154,"column":41}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":27},"generated":{"line":154,"column":43}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":27},"generated":{"line":154,"column":55}},{"source":"pyodide.ts","name":null,"original":{"line":5,"column":2},"generated":{"line":159,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":5,"column":2},"generated":{"line":159,"column":10}},{"source":"pyodide.ts","name":null,"original":{"line":5,"column":2},"generated":{"line":159,"column":19}},{"source":"pyodide.ts","name":null,"original":{"line":5,"column":2},"generated":{"line":159,"column":20}},{"source":"pyodide.ts","name":null,"original":{"line":5,"column":2},"generated":{"line":159,"column":35}},{"source":"pyodide.ts","name":null,"original":{"line":6,"column":4},"generated":{"line":159,"column":36}},{"source":"pyodide.ts","name":null,"original":{"line":5,"column":2},"generated":{"line":159,"column":45}},{"source":"pyodide.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":159,"column":47}},{"source":"pyodide.ts","name":null,"original":{"line":5,"column":2},"generated":{"line":159,"column":105}},{"source":"pyodide.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":160,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":160,"column":17}},{"source":"pyodide.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":160,"column":18}},{"source":"pyodide.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":161,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":162,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":10,"column":8},"generated":{"line":162,"column":12}},{"source":"pyodide.ts","name":null,"original":{"line":10,"column":8},"generated":{"line":162,"column":21}},{"source":"pyodide.ts","name":null,"original":{"line":10,"column":8},"generated":{"line":162,"column":22}},{"source":"pyodide.ts","name":null,"original":{"line":10,"column":8},"generated":{"line":162,"column":27}},{"source":"pyodide.ts","name":null,"original":{"line":10,"column":14},"generated":{"line":162,"column":28}},{"source":"pyodide.ts","name":null,"original":{"line":10,"column":8},"generated":{"line":162,"column":32}},{"source":"pyodide.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":162,"column":33}},{"source":"pyodide.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":162,"column":34}},{"source":"pyodide.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":165,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":165,"column":10}},{"source":"pyodide.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":165,"column":12}},{"source":"pyodide.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":165,"column":13}},{"source":"pyodide.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":165,"column":17}},{"source":"pyodide.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":167,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":167,"column":17}},{"source":"pyodide.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":167,"column":18}},{"source":"pyodide.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":168,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":169,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":12,"column":8},"generated":{"line":169,"column":12}},{"source":"pyodide.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":169,"column":32}},{"source":"pyodide.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":169,"column":33}},{"source":"pyodide.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":172,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":172,"column":10}},{"source":"pyodide.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":172,"column":12}},{"source":"pyodide.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":172,"column":13}},{"source":"pyodide.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":172,"column":17}},{"source":"pyodide.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":174,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":174,"column":10}},{"source":"pyodide.ts","name":null,"original":{"line":14,"column":9},"generated":{"line":174,"column":17}},{"source":"pyodide.ts","name":null,"original":{"line":14,"column":10},"generated":{"line":174,"column":18}},{"source":"pyodide.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":174,"column":21}},{"source":"pyodide.ts","name":null,"original":{"line":14,"column":14},"generated":{"line":174,"column":22}},{"source":"pyodide.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":174,"column":52}},{"source":"pyodide.ts","name":null,"original":{"line":17,"column":8},"generated":{"line":175,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":17,"column":8},"generated":{"line":175,"column":10}},{"source":"pyodide.ts","name":null,"original":{"line":17,"column":18},"generated":{"line":175,"column":20}},{"source":"pyodide.ts","name":null,"original":{"line":17,"column":21},"generated":{"line":175,"column":23}},{"source":"pyodide.ts","name":null,"original":{"line":17,"column":8},"generated":{"line":175,"column":544}},{"source":"pyodide.ts","name":null,"original":{"line":36,"column":2},"generated":{"line":176,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":36,"column":2},"generated":{"line":176,"column":10}},{"source":"pyodide.ts","name":null,"original":{"line":36,"column":9},"generated":{"line":176,"column":17}},{"source":"pyodide.ts","name":null,"original":{"line":36,"column":10},"generated":{"line":176,"column":18}},{"source":"pyodide.ts","name":null,"original":{"line":36,"column":2},"generated":{"line":176,"column":27}},{"source":"pyodide.ts","name":null,"original":{"line":36,"column":20},"generated":{"line":176,"column":28}},{"source":"pyodide.ts","name":null,"original":{"line":36,"column":2},"generated":{"line":176,"column":38}},{"source":"pyodide.ts","name":null,"original":{"line":38,"column":2},"generated":{"line":177,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":38,"column":2},"generated":{"line":177,"column":17}},{"source":"pyodide.ts","name":null,"original":{"line":38,"column":2},"generated":{"line":177,"column":18}},{"source":"pyodide.ts","name":null,"original":{"line":38,"column":2},"generated":{"line":178,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":38,"column":2},"generated":{"line":179,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":38,"column":8},"generated":{"line":179,"column":12}},{"source":"pyodide.ts","name":null,"original":{"line":38,"column":15},"generated":{"line":179,"column":19}},{"source":"pyodide.ts","name":null,"original":{"line":38,"column":16},"generated":{"line":179,"column":20}},{"source":"pyodide.ts","name":null,"original":{"line":38,"column":8},"generated":{"line":179,"column":31}},{"source":"pyodide.ts","name":null,"original":{"line":38,"column":28},"generated":{"line":179,"column":32}},{"source":"pyodide.ts","name":null,"original":{"line":39,"column":4},"generated":{"line":179,"column":33}},{"source":"pyodide.ts","name":null,"original":{"line":38,"column":28},"generated":{"line":179,"column":40}},{"source":"pyodide.ts","name":null,"original":{"line":40,"column":4},"generated":{"line":179,"column":42}},{"source":"pyodide.ts","name":null,"original":{"line":38,"column":28},"generated":{"line":179,"column":54}},{"source":"pyodide.ts","name":null,"original":{"line":41,"column":4},"generated":{"line":179,"column":56}},{"source":"pyodide.ts","name":null,"original":{"line":38,"column":28},"generated":{"line":179,"column":63}},{"source":"pyodide.ts","name":null,"original":{"line":38,"column":8},"generated":{"line":179,"column":64}},{"source":"pyodide.ts","name":null,"original":{"line":38,"column":2},"generated":{"line":179,"column":65}},{"source":"pyodide.ts","name":null,"original":{"line":38,"column":2},"generated":{"line":179,"column":66}},{"source":"pyodide.ts","name":null,"original":{"line":38,"column":2},"generated":{"line":182,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":38,"column":2},"generated":{"line":182,"column":10}},{"source":"pyodide.ts","name":null,"original":{"line":38,"column":2},"generated":{"line":182,"column":12}},{"source":"pyodide.ts","name":null,"original":{"line":38,"column":2},"generated":{"line":182,"column":13}},{"source":"pyodide.ts","name":null,"original":{"line":38,"column":2},"generated":{"line":182,"column":17}},{"source":"pyodide.ts","name":null,"original":{"line":43,"column":2},"generated":{"line":184,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":43,"column":2},"generated":{"line":184,"column":10}},{"source":"pyodide.ts","name":null,"original":{"line":43,"column":9},"generated":{"line":184,"column":17}},{"source":"pyodide.ts","name":null,"original":{"line":43,"column":10},"generated":{"line":184,"column":18}},{"source":"pyodide.ts","name":null,"original":{"line":43,"column":2},"generated":{"line":184,"column":21}},{"source":"pyodide.ts","name":null,"original":{"line":43,"column":14},"generated":{"line":184,"column":22}},{"source":"pyodide.ts","name":null,"original":{"line":43,"column":2},"generated":{"line":184,"column":41}},{"source":"pyodide.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":185,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":185,"column":10}},{"source":"pyodide.ts","name":null,"original":{"line":44,"column":9},"generated":{"line":185,"column":17}},{"source":"pyodide.ts","name":null,"original":{"line":44,"column":10},"generated":{"line":185,"column":18}},{"source":"pyodide.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":185,"column":21}},{"source":"pyodide.ts","name":null,"original":{"line":44,"column":14},"generated":{"line":185,"column":22}},{"source":"pyodide.ts","name":null,"original":{"line":44,"column":21},"generated":{"line":185,"column":29}},{"source":"pyodide.ts","name":null,"original":{"line":44,"column":22},"generated":{"line":185,"column":30}},{"source":"pyodide.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":185,"column":44}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":27},"generated":{"line":191,"column":3}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":27},"generated":{"line":191,"column":4}},{"source":"pyodide.ts","name":null,"original":{"line":45,"column":1},"generated":{"line":192,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":192,"column":1}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":194,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":194,"column":7}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":194,"column":8}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":194,"column":19}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":24},"generated":{"line":194,"column":22}},{"source":"pyodide.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":194,"column":33}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":7},"generated":{"line":196,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":13},"generated":{"line":196,"column":4}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":22},"generated":{"line":196,"column":13}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":25},"generated":{"line":196,"column":16}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":13},"generated":{"line":196,"column":25}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":25},"generated":{"line":196,"column":34}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":32},"generated":{"line":196,"column":35}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":25},"generated":{"line":196,"column":39}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":36},"generated":{"line":196,"column":41}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":36},"generated":{"line":197,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":36},"generated":{"line":197,"column":9}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":36},"generated":{"line":197,"column":18}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":36},"generated":{"line":197,"column":19}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":36},"generated":{"line":197,"column":24}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":36},"generated":{"line":197,"column":25}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":36},"generated":{"line":197,"column":27}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":36},"generated":{"line":197,"column":32}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":36},"generated":{"line":197,"column":33}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":36},"generated":{"line":197,"column":35}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":36},"generated":{"line":197,"column":40}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":36},"generated":{"line":197,"column":41}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":36},"generated":{"line":197,"column":43}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":36},"generated":{"line":197,"column":55}},{"source":"pyodide.ts","name":null,"original":{"line":48,"column":2},"generated":{"line":202,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":48,"column":6},"generated":{"line":202,"column":14}},{"source":"pyodide.ts","name":null,"original":{"line":48,"column":7},"generated":{"line":202,"column":15}},{"source":"pyodide.ts","name":null,"original":{"line":48,"column":2},"generated":{"line":202,"column":19}},{"source":"pyodide.ts","name":null,"original":{"line":48,"column":13},"generated":{"line":202,"column":21}},{"source":"pyodide.ts","name":null,"original":{"line":48,"column":13},"generated":{"line":202,"column":28}},{"source":"pyodide.ts","name":null,"original":{"line":48,"column":13},"generated":{"line":202,"column":29}},{"source":"pyodide.ts","name":null,"original":{"line":48,"column":13},"generated":{"line":203,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":48,"column":13},"generated":{"line":204,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":48,"column":13},"generated":{"line":204,"column":11}},{"source":"pyodide.ts","name":null,"original":{"line":49,"column":2},"generated":{"line":205,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":49,"column":2},"generated":{"line":205,"column":10}},{"source":"pyodide.ts","name":null,"original":{"line":49,"column":9},"generated":{"line":205,"column":17}},{"source":"pyodide.ts","name":null,"original":{"line":49,"column":10},"generated":{"line":205,"column":18}},{"source":"pyodide.ts","name":null,"original":{"line":49,"column":2},"generated":{"line":205,"column":25}},{"source":"pyodide.ts","name":null,"original":{"line":49,"column":18},"generated":{"line":205,"column":26}},{"source":"pyodide.ts","name":null,"original":{"line":49,"column":2},"generated":{"line":205,"column":37}},{"source":"pyodide.ts","name":null,"original":{"line":49,"column":32},"generated":{"line":205,"column":40}},{"source":"pyodide.ts","name":null,"original":{"line":49,"column":2},"generated":{"line":205,"column":44}},{"source":"pyodide.ts","name":null,"original":{"line":50,"column":12},"generated":{"line":206,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":50,"column":12},"generated":{"line":206,"column":17}},{"source":"pyodide.ts","name":null,"original":{"line":50,"column":12},"generated":{"line":206,"column":18}},{"source":"pyodide.ts","name":null,"original":{"line":50,"column":12},"generated":{"line":207,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":50,"column":12},"generated":{"line":208,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":50,"column":18},"generated":{"line":208,"column":12}},{"source":"pyodide.ts","name":null,"original":{"line":50,"column":25},"generated":{"line":208,"column":19}},{"source":"pyodide.ts","name":null,"original":{"line":50,"column":26},"generated":{"line":208,"column":20}},{"source":"pyodide.ts","name":null,"original":{"line":50,"column":18},"generated":{"line":208,"column":34}},{"source":"pyodide.ts","name":null,"original":{"line":50,"column":41},"generated":{"line":208,"column":35}},{"source":"pyodide.ts","name":null,"original":{"line":50,"column":18},"generated":{"line":208,"column":58}},{"source":"pyodide.ts","name":null,"original":{"line":50,"column":12},"generated":{"line":208,"column":59}},{"source":"pyodide.ts","name":null,"original":{"line":50,"column":12},"generated":{"line":208,"column":60}},{"source":"pyodide.ts","name":null,"original":{"line":50,"column":6},"generated":{"line":211,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":50,"column":6},"generated":{"line":211,"column":10}},{"source":"pyodide.ts","name":null,"original":{"line":50,"column":9},"generated":{"line":211,"column":13}},{"source":"pyodide.ts","name":null,"original":{"line":50,"column":12},"generated":{"line":211,"column":16}},{"source":"pyodide.ts","name":null,"original":{"line":50,"column":12},"generated":{"line":211,"column":18}},{"source":"pyodide.ts","name":null,"original":{"line":50,"column":12},"generated":{"line":211,"column":19}},{"source":"pyodide.ts","name":null,"original":{"line":50,"column":12},"generated":{"line":211,"column":23}},{"source":"pyodide.ts","name":null,"original":{"line":50,"column":6},"generated":{"line":211,"column":25}},{"source":"pyodide.ts","name":null,"original":{"line":51,"column":2},"generated":{"line":212,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":51,"column":2},"generated":{"line":212,"column":17}},{"source":"pyodide.ts","name":null,"original":{"line":51,"column":2},"generated":{"line":212,"column":18}},{"source":"pyodide.ts","name":null,"original":{"line":51,"column":2},"generated":{"line":213,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":51,"column":2},"generated":{"line":214,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":51,"column":9},"generated":{"line":214,"column":12}},{"source":"pyodide.ts","name":null,"original":{"line":51,"column":2},"generated":{"line":214,"column":15}},{"source":"pyodide.ts","name":null,"original":{"line":51,"column":2},"generated":{"line":214,"column":16}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":36},"generated":{"line":217,"column":3}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":36},"generated":{"line":217,"column":4}},{"source":"pyodide.ts","name":null,"original":{"line":52,"column":1},"generated":{"line":218,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":7},"generated":{"line":218,"column":1}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":13},"generated":{"line":220,"column":0}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":13},"generated":{"line":220,"column":7}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":13},"generated":{"line":220,"column":8}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":13},"generated":{"line":220,"column":17}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":22},"generated":{"line":220,"column":20}},{"source":"pyodide.ts","name":null,"original":{"line":47,"column":13},"generated":{"line":220,"column":29}}],"sources":{"pyodide.ts":"//@ts-nocheck\nimport { sleep, addScriptToPage } from \"./helpers\";\n\nexport const loadPyodide = async () => {\n  addScriptToPage(\n    \"pyodide\",\n    \"https://cdn.jsdelivr.net/pyodide/v0.16.1/full/pyodide.js\"\n  );\n\n  await sleep(2000);\n\n  await languagePluginLoader;\n\n  console.log(\"pyodide successfully loaded.\");\n\n  // setup pyodide environment to run code blocks as needed\n  const setup_code = `\nimport sys, io, traceback\nnamespace = {}  # use separate namespace to hide run_code, modules, etc.\ndef run_code(code):\n  \"\"\"run specified code and return stdout and stderr\"\"\"\n  out = io.StringIO()\n  oldout = sys.stdout\n  olderr = sys.stderr\n  sys.stdout = sys.stderr = out\n  try:\n      # change next line to exec(code, {}) if you want to clear vars each time\n      exec(code, namespace)\n  except:\n      traceback.print_exc()\n\n  sys.stdout = oldout\n  sys.stderr = olderr\n  return out.getvalue()\n`;\n  pyodide.runPython(setup_code);\n\n  await pyodide.loadPackage([\n    \"numpy\",\n    \"matplotlib\",\n    \"scipy\",\n  ]);\n  console.log(\"Loaded packages: \");\n  console.log(pyodide.loadedPackages);\n};\n\nexport const runPython = async (code) => {\n  if (!code) return;\n  pyodide.globals.code_to_run = code;\n  var out = await pyodide.runPythonAsync(\"run_code(code_to_run)\");\n  return out;\n};\n"},"lineCount":null}},"error":null,"hash":"928aa879f0e7cd0194967dfb4d7a36f8","cacheData":{"env":{}}}